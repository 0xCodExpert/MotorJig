/***********************************************************************************************//**
* \file	ring_buffer.h
* \brief
* \author D.aN
* <pre>
* Ver   Date       Changes
* ----- ---------- -----------------------------------------------
* 00.01 2014/02/14 file generated
* </pre>
*
***************************************************************************************************/

#ifndef __RING_BUFFER_H__
#define __RING_BUFFER_H__

/***************************************************************************************************
*	Include Files
***************************************************************************************************/
#include "define.h"

/***************************************************************************************************
*	Constant Definitions
***************************************************************************************************/
#define ST_SUCCESS												0x00000000

/***************************************************************************************************
*	Type Definitions
***************************************************************************************************/
typedef unsigned char				RING_DATA;

struct ring_buffer
{
	INT16U		head;
	INT16U		tail;
	INT16U		length;
	RING_DATA	*buf;
};

/***************************************************************************************************
*	Macros (Inline Functions) Definitions
***************************************************************************************************/


/***************************************************************************************************
*	Variable Definitions
***************************************************************************************************/


/***************************************************************************************************
*	Function Prototypes
***************************************************************************************************/
STATUS Ring_Initialize(struct ring_buffer *b, RING_DATA *buffer, INT32U length);
INT16U Ring_GetCount(struct ring_buffer *b);
BOOL Ring_IsEmpty(struct ring_buffer const *b);
BOOL Ring_IsFull(struct ring_buffer const *b);
void Ring_Put(struct ring_buffer *b, RING_DATA data);
RING_DATA Ring_Get(struct ring_buffer *b);

#endif	/* #ifndef __RING_BUFFER_H__ */

